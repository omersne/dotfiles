#!/bin/bash

export DOTFILES_DIR
DFD="$DOTFILES_DIR"

umask 077
export EDITOR="vi"

export LS_COLORS=$LS_COLORS:'di=94:ex=32:ln=91'

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

DOWN=$HOME/Downloads/
DESK=$HOME/Desktop/
DOCS=$HOME/Documents/

#if ___is_osx && [ -d $DOTFILES_DIR/osx/bin ]; then
#    export PATH="$PATH:$DOTFILES_DIR/osx/bin"
#
#elif ___is_linux && [ -d $DOTFILES_DIR/linux/bin ]; then
#    export PATH="$PATH:$DOTFILES_DIR/linux/bin"
#fi

if [ -n "$DOTFILES_DIR" ] && [ -d $DOTFILES_DIR/bin ]; then
    export PATH="$PATH:$DOTFILES_DIR/bin:$DOTFILES_DIR/bin/local:$DOTFILES_DIR/bin/local/python"
    export PYTHONPATH="$PYTHONPATH:$DOTFILES_DIR/bin/python/lib:$DOTFILES_DIR/bin/local/python/lib"
fi

if [ -x ~/git/youtube-dl/youtube_dl/__main__.py ]; then
    YOUTUBE_DL=~/git/youtube-dl/youtube_dl/__main__.py
    YOUTUBE_DL_OPTIONS=(
        --restrict-filename
        --output="'%(title)s_%(id)s_U%(upload_date)s.%(ext)s'"
        --format="'bestvideo[height<=1080][ext=mp4]+bestaudio[ext=m4a]/mp4'"
        --write-info-json
        --write-all-thumbnails
        --no-mtime
    )
    YOUTUBE_DL_MP3_OPTIONS=(
        --restrict-filename
        --output="'%(title)s_%(id)s_U%(upload_date)s.%(ext)s'"
        --extract-audio
        --audio-format=mp3
        --no-mtime
    )
fi

___load_gpg_agent()
{
    if which gpg >/dev/null 2>&1 && \
            (___is_osx || (___is_linux && [ -e ~/.linux_load_gpg_agent ])); then

        # For fixing the problem with the password prompt in GPG in OSX
        #if [ -z "$GPG_TTY" ]; then
            export GPG_TTY=$(tty)
        #fi

        if [ -e ~/.use-gpg-agent-2.dfcfg ]; then
            if ! pgrep gpg-agent > /dev/null; then
                gpg-agent --daemon
            fi
        else
            # From https://blog.chendry.org/2015/03/13/starting-gpg-agent-in-osx.html
            [ -f ~/.gpg-agent-info ] && source ~/.gpg-agent-info

            if [ -S "${GPG_AGENT_INFO%%:*}" ]; then
                export GPG_AGENT_INFO
            else
                eval $(gpg-agent --daemon --write-env-file ~/.gpg-agent-info)
            fi
        fi

        if [ -S "${GNUPGHOME:-$HOME/.gnupg}/S.gpg-agent.ssh" ]; then
            GPG_SSH_AUTH_SOCK="${GNUPGHOME:-$HOME/.gnupg}/S.gpg-agent.ssh"
        fi
    fi
}
___load_gpg_agent

