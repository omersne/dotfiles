#!/bin/bash

if [ -r $HOME/.dotfiles_dir_path ]; then
    export DOTFILES_DIR="$(cat $HOME/.dotfiles_dir_path)"
    DFD="$DOTFILES_DIR"
fi

[ -r $HOME/.git_dir_path ] && GIT_DIR="$(cat $HOME/.git_dir_path)"

umask 077
export EDITOR="vi"

export LS_COLORS=$LS_COLORS:'di=94:ex=32:ln=91'

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

DOWN=$HOME/Downloads/
DESK=$HOME/Desktop/
DOCS=$HOME/Documents/

#if ___is_osx && [ -d $DOTFILES_DIR/osx/bin ]; then
#    export PATH="$PATH:$DOTFILES_DIR/osx/bin"
#
#elif ___is_linux && [ -d $DOTFILES_DIR/linux/bin ]; then
#    export PATH="$PATH:$DOTFILES_DIR/linux/bin"
#fi

if [ -n "$DOTFILES_DIR" ] && [ -d $DOTFILES_DIR/bin ]; then
    append_PATH "$DOTFILES_DIR/bin" "$DOTFILES_DIR/bin/local" "$DOTFILES_DIR/bin/local/python"
    append_PYTHONPATH "$DOTFILES_DIR/bin/python/lib" "$DOTFILES_DIR/bin/local/python/lib"

    if ___is_linux && [ -d $DOTFILES_DIR/bin/linux ]; then
        append_PATH "$DOTFILES_DIR/bin/linux"
    elif ___is_osx && [ -d $DOTFILES_DIR/bin/osx ]; then
        append_PATH "$DOTFILES_DIR/bin/osx"
    fi

    if exists_in_path youtube-dl; then
        append_PATH "$DOTFILES_DIR/bin/youtube-dl"
    fi
fi

RSYNC_PARTIAL_DIR="${RSYNC_PARTIAL_DIR:-.___rsync_partial01}"

___load_gpg_agent()
{
    if which gpg >/dev/null 2>&1 && \
            (___is_osx || (___is_linux && [ -e ~/.linux_load_gpg_agent ])); then

        # For fixing the problem with the password prompt in GPG in OSX
        #if [ -z "$GPG_TTY" ]; then
            export GPG_TTY=$(tty)
        #fi

        if [ -e ~/.use-gpg-agent-2.dfcfg ]; then
            if ! pgrep gpg-agent > /dev/null; then
                gpg-agent --daemon 2>>~/.gpg-agent.log
            fi
        else
            # From https://blog.chendry.org/2015/03/13/starting-gpg-agent-in-osx.html
            [ -f ~/.gpg-agent-info ] && source ~/.gpg-agent-info

            if [ -S "${GPG_AGENT_INFO%%:*}" ]; then
                export GPG_AGENT_INFO
            else
                eval $(gpg-agent --daemon --write-env-file ~/.gpg-agent-info)
            fi
        fi

        if [ -S "${GNUPGHOME:-$HOME/.gnupg}/S.gpg-agent.ssh" ]; then
            GPG_SSH_AUTH_SOCK="${GNUPGHOME:-$HOME/.gnupg}/S.gpg-agent.ssh"
        fi
        if [ -S "$GPG_SSH_AUTH_SOCK" ] && [ -e ~/.use_gpg_ssh_auth_sock.dfcfg ]; then
            export SSH_AUTH_SOCK="$GPG_SSH_AUTH_SOCK"
        fi
    fi
}
___load_gpg_agent

